# YourSubmoduleConfig.cmake.in
#
# 这个文件是 find_package(YourSubmodule) 命令找到的入口文件。
# 它负责加载 YourSubmodule 的目标信息。

# 首先检查是否已经加载过
if(NOT @SUBMODULE_PACKAGE_NAME@_FOUND)
    # 设置一个变量表示包已找到
    set(@SUBMODULE_PACKAGE_NAME@_FOUND TRUE)
    set(@SUBMODULE_PACKAGE_NAME@_VERSION "@PROJECT_VERSION@")

    # 包含由 install(EXPORT ...) 生成的目标文件
    # CMAKE_CURRENT_LIST_DIR 是当前正在处理的 CMake 文件的目录
    include("${CMAKE_CURRENT_LIST_DIR}/@SUBMODULE_PACKAGE_NAME@Targets.cmake")

    # 设置头文件包含路径变量，以便 find_package 用户可以使用
    # 注意，这个路径是给父项目使用的，它需要知道去哪里找头文件。
    # 根据我们之前的 install(DIRECTORY ... DESTINATION include/${SUBMODULE_PACKAGE_NAME})
    # 最终安装到 <install_prefix>/include/YourSubmodule
    # 如果父项目使用 add_subdirectory 方式，通常不需要额外设置 INCLUDE_DIRS，
    # 因为 target_link_libraries 会自动传递 PUBLIC include 路径。
    # 但为了 find_package 场景和完整性，提供一个变量是个好习惯。
    set(@SUBMODULE_PACKAGE_NAME@_INCLUDE_DIRS "${CMAKE_INSTALL_PREFIX}/include/@SUBMODULE_PACKAGE_NAME@")

endif()